#!/usr/bin/env node

const fs = require('fs')
const path = require('path')
const glob = require('glob')
const dir = process.argv[2]

if (!dir) {
  console.log('\nUsage: \nmarkdown-index directory/fulla/markdowns\n')
  process.exit(1)
}

/**
 * Slugify the url part of a markdown link.
 *
 * @source https://github.com/jonschlinkert/markdown-toc/blob/master/lib/utils.js
 * @name  options.slugify
 * @param  {String} `str` The string to slugify
 * @param  {Object} `options` Pass a custom slugify function on `options.slugify`
 * @return {String}
 * @api public
 */

function getTitle(str) {
  if (/^\[[^\]]+\]\(/.test(str)) {
    var m = /^\[([^\]]+)\]/.exec(str);
    if (m) return m[1];
  }
  return str;
};

function slugify (str, options) {
  options = options || {};
  if (options.slugify === false) return str;
  if (typeof options.slugify === 'function') {
    return options.slugify(str, options);
  }

  str = getTitle(str);
  str = str.toLowerCase();

  // `.split()` is often (but not always) faster than `.replace()`
  str = str.split(' ').join('-');
  str = str.split(/\t/).join('--');
  if (options.stripHeadingTags !== false) {
    str = str.split(/<\/?[^>]+>/).join('');
  }
  str = str.split(/[|$&`~=\\\/@+*!?({[\]})<>=.,;:'"^]/).join('');
  str = str.split(/[。？！，、；：“”【】（）〔〕［］﹃﹄“ ”‘’﹁﹂—…－～《》〈〉「」]/).join('');
  if (options.num) {
    str += '-' + options.num;
  }
  return str;
};

glob(dir + '/**/*.md', function (err, files) {
  if (err) throw err
  var tables = files.map(function (file) {
    if (file.match('index.md')) return
    if (file.match('README.md')) return
    if (file.match('node_modules')) return

    var filenameSlug = slugify(path.parse(file).name)

    // Add filename as a heading.
    return '- [' + filenameSlug + '](' + file + ')'
  })

  process.stdout.write(tables.join('\n'))
  return tables.join('\n\n')
})
